[project]
name = "berry-mcp-anthropic"
version = "0.1.0"
description = "Universal MCP server framework using Anthropic's official SDK - easily create and deploy Model Context Protocol servers with any tools"
authors = [
    {name = "Richard Chukwu", email = "richinex@gmail.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11", 
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Server",
    "Topic :: Communications",
]

dependencies = [
    # Core MCP dependencies
    "mcp>=1.6.0",
    "pydantic>=2.5.2",
    "typing-extensions>=4.8.0",
    
    # Utility dependencies
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]
# Tool-specific dependencies (examples)
pdf = [
    "PyPDF2>=3.0.1",
    "pymupdf4llm>=0.0.22",
]
web = [
    "requests>=2.28.1",
    "beautifulsoup4>=4.12.0",
    "selenium>=4.9.0",
]
data = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
]

[project.scripts]
berry-mcp-anthropic = "berry_mcp.server:cli_main"
berry-mcp = "berry_mcp.server:cli_main"

[project.urls]
Homepage = "https://github.com/richinex/berry-mcp-server"
Repository = "https://github.com/richinex/berry-mcp-server"
Issues = "https://github.com/richinex/berry-mcp-server/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/berry_mcp"]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "B", "UP"]
ignore = ["E501", "E701", "E721", "B904", "B007", "B027", "UP038", "F401"]
exclude = ["tests/"]

[tool.ruff.lint.isort]
known-first-party = ["berry_mcp"]

[tool.black]
line-length = 88
target-version = ['py310']

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["src/berry_mcp"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/.*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if False:"
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "mypy>=1.16.1",
    "ruff>=0.12.0",
]
